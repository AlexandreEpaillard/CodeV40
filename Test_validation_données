const request = require('supertest');
const app = require('../app');

describe('Test de validation de type de données API EcoWatt', () => {
  it('renvoie une erreur si les données ne sont pas du bon type', async () => {
    const response = await request(app)
      .get('/api/consommation')
      .set('Accept', 'application/json')
      .send();

    expect(response.statusCode).toBe(200);
    expect(response.body).toBeInstanceOf(Array);
    expect(response.body.length).toBeGreaterThan(0);
    expect(response.body[0]).toHaveProperty('date');
    expect(response.body[0]).toHaveProperty('valeur');
    expect(typeof response.body[0].date).toBe('string');
    expect(typeof response.body[0].valeur).toBe('number');
  });
});



describe('Test de validation des données de l\'API', () => {
  test('Vérification du type et des contraintes des données', async () => {
    const res = await request(app)
      .post('/api/data')
      .send({
        pas: 2,
        hvalue: -1,
        dvalue: 4,
        // Autres propriétés de l'objet ici
      })
      .set('Accept', 'application/json');

    expect(res.status).toBe(400);
    expect(res.body.error).toBe('Données invalides');

    const res2 = await request(app)
      .post('/api/data')
      .send({
        pas: 2,
        hvalue: 2,
        dvalue: 1,
        // Autres propriétés de l'objet ici
      })
      .set('Accept', 'application/json');

    expect(res2.status).toBe(200);
  });
});


